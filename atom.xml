<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>张慧的博客</title>
  
  <subtitle>学习记录</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-04T09:49:33.365Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>张慧</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue-cli3源码解读</title>
    <link href="http://yoursite.com/2019/12/04/vueCli3/"/>
    <id>http://yoursite.com/2019/12/04/vueCli3/</id>
    <published>2019-12-04T09:48:12.000Z</published>
    <updated>2019-12-04T09:49:33.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>node:v10.15.3</li><li>platform:window10</li><li>@vue/cli: 4.0.5</li><li>@vue/cli-service： 4.0.5</li></ul><h1 id="npm包"><a href="#npm包" class="headerlink" title="npm包"></a>npm包</h1><ul><li><a href="https://github.com/tj/commander.js" target="_blank" rel="noopener">commander</a>：node.js 命令行接口的完整解决方案,是一款重量轻，表现力和强大的命令行框架，提供了用户命令行输入和参数解析强大功能。</li><li><a href="https://github.com/SBoudrias/Inquirer.js" target="_blank" rel="noopener">Inquirer</a>：为交互式命令行工具</li><li><a href="https://github.com/sindresorhus/execa" target="_blank" rel="noopener">execa</a>： 是可以调用 shell 和本地外部程序的 javascript 封装。会启动子进程执行，支持多操作系统，包括 windows，如果父进程退出，则生成的全部子进程都被杀死。</li><li><a href="https://github.com/wycats/handlebars.js" target="_blank" rel="noopener">handlebars</a>：一个 javascript 语义模版库，而且与 Mustache 模板 是兼容的</li><li><a href="https://github.com/segmentio/metalsmith" target="_blank" rel="noopener">metalsmith</a>: 一个静态网站生成器，可以用在批量处理模板的场景，和 hexo 类似</li><li><a href="https://github.com/chalk/chalk" target="_blank" rel="noopener">chalk</a>：用于修改控制台字符串的样式，包括字体样式（加粗），颜色以及背景颜色等。</li><li>download-git-repo：是用于 从 GitHub, GitLab, Bitbucket 下载一个 git 仓库</li><li><a href="https://github.com/tj/consolidate.js" target="_blank" rel="noopener">consolidate</a>：是一个模版引擎整合库，它的作用是把一些著名的模板引擎适配成 Express 兼容的接口。在 vue-cli 的 init 命令中利用 consolidate.handlebars.render 是实现模版的渲染。</li></ul><h2 id="vue-create"><a href="#vue-create" class="headerlink" title="vue create"></a>vue create</h2><p>入口packages/@vue/cli/bin/vue.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">program</span><br><span class="line">  .command(<span class="string">'create &lt;app-name&gt;'</span>)</span><br><span class="line">  .description(<span class="string">'create a new project powered by vue-cli-service'</span>)</span><br><span class="line">  .option(<span class="string">'-p, --preset &lt;presetName&gt;'</span>, <span class="string">'Skip prompts and use saved or remote preset'</span>)</span><br><span class="line">  .option(<span class="string">'-d, --default'</span>, <span class="string">'Skip prompts and use default preset'</span>)</span><br><span class="line">  .option(<span class="string">'-i, --inlinePreset &lt;json&gt;'</span>, <span class="string">'Skip prompts and use inline JSON string as preset'</span>)</span><br><span class="line">  .option(<span class="string">'-m, --packageManager &lt;command&gt;'</span>, <span class="string">'Use specified npm client when installing dependencies'</span>)</span><br><span class="line">  .option(<span class="string">'-r, --registry &lt;url&gt;'</span>, <span class="string">'Use specified npm registry when installing dependencies (only for npm)'</span>)</span><br><span class="line">  .option(<span class="string">'-g, --git [message]'</span>, <span class="string">'Force git initialization with initial commit message'</span>)</span><br><span class="line">  .option(<span class="string">'-n, --no-git'</span>, <span class="string">'Skip git initialization'</span>)</span><br><span class="line">  .option(<span class="string">'-f, --force'</span>, <span class="string">'Overwrite target directory if it exists'</span>)</span><br><span class="line">  .option(<span class="string">'-c, --clone'</span>, <span class="string">'Use git clone when fetching remote preset'</span>)</span><br><span class="line">  .option(<span class="string">'-x, --proxy'</span>, <span class="string">'Use specified proxy when creating project'</span>)</span><br><span class="line">  .option(<span class="string">'-b, --bare'</span>, <span class="string">'Scaffold project without beginner instructions'</span>)</span><br><span class="line">  .option(<span class="string">'--skipGetStarted'</span>, <span class="string">'Skip displaying "Get started" instructions'</span>)</span><br><span class="line">  .action(<span class="function">(<span class="params">name, cmd</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> options = cleanArgs(cmd)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (minimist(process.argv.slice(<span class="number">3</span>))._.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(chalk.yellow(<span class="string">'\n Info: You provided more than one argument. The first one will be used as the app\'s name, the rest are ignored.'</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// --git makes commander to default git to true</span></span><br><span class="line">    <span class="keyword">if</span> (process.argv.includes(<span class="string">'-g'</span>) || process.argv.includes(<span class="string">'--git'</span>)) &#123;</span><br><span class="line">      options.forceGit = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">'../lib/create'</span>)(name, options)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><img src="/2019/12/04/vueCli3/create-overall.png">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;node:v10.15.3&lt;/li&gt;
&lt;li&gt;platform:window10&lt;/li&gt;
&lt;li&gt;@vue/cli: 4.0.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>NSR 实现 Web 端“即开”体验的秘密思考</title>
    <link href="http://yoursite.com/2019/11/22/NSR/"/>
    <id>http://yoursite.com/2019/11/22/NSR/</id>
    <published>2019-11-22T09:11:12.000Z</published>
    <updated>2019-12-06T09:05:09.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="已有的渲染机制"><a href="#已有的渲染机制" class="headerlink" title="已有的渲染机制"></a>已有的渲染机制</h1><h2 id="weex"><a href="#weex" class="headerlink" title="weex"></a>weex</h2><blockquote><p><a href="https://weex.apache.org/zh/guide/introduction.html" target="_blank" rel="noopener">weex</a> 致力于使开发者能基于通用跨平台的 Web 开发语言和开发经验，来构建 Android、iOS 和 Web 应用。简单来说，在集成了 WeexSDK 之后，你可以使用 JavaScript 语言和前端开发经验来开发移动应用。<br><a href="https://facebook.github.io/react-native/docs/getting-started.html" target="_blank" rel="noopener">ReactNative</a>也是类似的</p></blockquote><ul><li>跨端：需要考虑第三方 APP 打开的场景，如外渠、分享等，正文页面的运行环境是非常多变的；</li><li>跨平台：Weex 兼容 IOS、安卓和 H5 的成本不可忽视，其降级 H5 的体验需要定向优化，比如左右滑屏、视差滚动、复杂动画；</li><li>排版：Weex 处理富文本内容有短板，排版的表现力满足不了正文场景的诉求，而解决此问题的成本是比较高的；</li><li>性能：虽然 Weex 性能好于 H5（好的最主要原因是 Weex 资源是离线的），但其本质是依赖于 JSBridge，性能与 Native 仍有差距，当我们要求对齐 Native 的体验时，Weex 也要彻底解决页面打开的闪白问题；</li><li>成本：正文要覆盖端外没有 Weex 容器的场景，必然要很好地兼容 H5 回退的情况，并且体验必须不能低于现有的 H5 体验。也就是如果选择 Weex，总体成本必然大于只维护 H5 版本的情况，而且业务是不停在迭代的，如果用 Weex 重构整个 H5 体系，其风险和成本几乎是不可控的。</li></ul><h2 id="PWA"><a href="#PWA" class="headerlink" title="PWA"></a>PWA</h2><blockquote><p>PWA：Progressive Web Apps，渐进式 Web 应用</p></blockquote><ul><li>PWA 对信息流业务有用的 ServiceWorker；</li><li>ServiceWorker 的启动和保活的成本很大 ;</li><li>ServiceWorker 的缓存——CacheStorage，本质上也是 HttpCache，在内核角度并不是最快的，而且如果我们使用 SW 对正文 Cache 后，如何更新和回收成为一个必须解决的问题。</li></ul><h2 id="SSR"><a href="#SSR" class="headerlink" title="SSR"></a>SSR</h2><blockquote><p>SSR：Server side rendering，即服务端渲染，由服务器完成页面的 html 结构拼接的页面处理技术。</p></blockquote><p>主文档或 Ajax 请求的网络耗时就不止 300ms 了</p><h3 id="服务端算力问题"><a href="#服务端算力问题" class="headerlink" title="服务端算力问题"></a>服务端算力问题</h3><p>此问题会延伸为机器部署、服务稳定性、可用性、QPS 压力等服务端的问题。这其实是大多数前端并不擅长的，在项目启动和执行过程，我们并没有那么多精力去处理这些问题，因此在 UC 端内我们设计了 NSR，而 SSR 则作为非信息流场景下的补充方案。</p><h3 id="预加载带来的网络峰值问题"><a href="#预加载带来的网络峰值问题" class="headerlink" title="预加载带来的网络峰值问题"></a>预加载带来的网络峰值问题</h3><p>此问题的本质是成本。如果使用 SSR 渲染页面结构再通过网络加载完整页面，那么服务器和流量成本就可能会显著增加，而 NSR 则是一种成本更低的选择。</p><h2 id="CSR"><a href="#CSR" class="headerlink" title="CSR"></a>CSR</h2><blockquote><p>CSR：Client side rendering，即客户端渲染，指的是由页面在用户的浏览器环境中通过执行 JS 完成页面结构拼装的渲染处理技术。</p></blockquote><h1 id="什么是NSR"><a href="#什么是NSR" class="headerlink" title="什么是NSR"></a>什么是NSR</h1><blockquote><p>NSR：Native side rendering，即由客户端（Native 侧）实现页面结构的拼接，进而实现页面渲染的处理技术。</p></blockquote><h2 id="现有的渲染流程"><a href="#现有的渲染流程" class="headerlink" title="现有的渲染流程"></a>现有的渲染流程</h2><img src="/2019/11/22/NSR/now.png"><h2 id="页面渲染的最短路径"><a href="#页面渲染的最短路径" class="headerlink" title="页面渲染的最短路径"></a>页面渲染的最短路径</h2><p>从浏览器内核的角度，性能最好的页面就是——在用户访问的那一刻，页面所需的“资源”不再依赖网络而从内核的内存级缓存中获取，然后直接交给渲染引擎执行最后的处理（如下图所示），这就是理论上的完成页面渲染的最短路径了。</p><img src="/2019/11/22/NSR/shortest.png"><h2 id="NSR的渲染流程设计"><a href="#NSR的渲染流程设计" class="headerlink" title="NSR的渲染流程设计"></a>NSR的渲染流程设计</h2><img src="/2019/11/22/NSR/step.png"><p>通常意义上，前端开发者所说的“渲染”，其实指的是将页面分拆为数据和模板，然后根据一定的规则拼接形成完整 HTML 结构的过程。</p><h2 id="模板和数据的预处理"><a href="#模板和数据的预处理" class="headerlink" title="模板和数据的预处理"></a>模板和数据的预处理</h2><img src="/2019/11/22/NSR/process.png"><ol><li>页面是动态的，即 URL 是变化的，需要实现一种页面与模板的匹配机制，这是一个“多对一”的关系；</li><li>在 APP 侧实现一个类似 SSR 的本地渲染服务，而且在信息流场景下是常住的服务，因为有很多页面需要动态组装 HTML 结构。<img src="/2019/11/22/NSR/native.png"></li></ol><h2 id="客户端架构"><a href="#客户端架构" class="headerlink" title="客户端架构"></a>客户端架构</h2><p>资源预处理服务则会包含一个类似 SSR 的 JS 运行时服务。在安卓下则是由 V8 提供的 JS-Runtime，在 iOS 下则是 JS-Core，这样客户端就可以执行前端所提供的 JS-bundle，进而计算出正文的 HTML 结构。</p><h2 id="NSR-的前端架构演进"><a href="#NSR-的前端架构演进" class="headerlink" title="NSR 的前端架构演进"></a>NSR 的前端架构演进</h2><h3 id="离线资源包的构成"><a href="#离线资源包的构成" class="headerlink" title="离线资源包的构成"></a>离线资源包的构成</h3><p>这里所说的离线资源，其实就是“静态模板”，页面中相对固定的部分资源，它需要包含 HTML 模板、CSS、JS 等正文首屏依赖的核心资源。对于异步的 JS，体积比较大，我们也一并打包在离线包中。在实际的页面访问中，首屏的核心资源是直接设置到内存缓存，而异步资源则是使用 HTTP cache（磁盘缓存）。</p><p>除了前端页面渲染过程所需的资源外，针对 NSR 需求要解决以下两个问题：</p><ol><li>HTML 模板需要一个数据占位，以便 NSR 中被替换为期望的结果；</li><li>设计并构建一个可运行在 CSR、SSR 以及 NSR 场景的 JSBundle，也就三端同构的 JS。<img src="/2019/11/22/NSR/jscode.png"></li></ol><p>资源以文件的 md5 结果为文件名，并通过 JSON 文件来描述这些资源，以便 APP 进行解析匹配，而三端同构的 js bundle 被标记为 renderjs 类型。<br>另外，前端模板中则在需要插入页面节点或数据的位置，与客户端约定了  注释标签作为替换占位标记。<br>JSON 描述文件示例如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"module"</span>: <span class="string">"wmmobile"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"3.3.21.0"</span>,</span><br><span class="line">  <span class="string">"res"</span>: &#123;</span><br><span class="line">    <span class="string">"545f196bb7bca3e98a8ed6c4d9211374"</span>: &#123;</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"https://mparticle.uc.cn/article.html"</span>,</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"html"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"b5cdc529c83e0ca79231d08f39ab6ac3"</span>: &#123;</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"https://mparticle.uc.cn/article_org.html"</span>,</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"html"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"ead6512d3d7c940ece8c916c3dc8b44f"</span>: &#123;</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"https://image.uc.cn/s/uae/g/1y/infoflow/assets/js/IflowPageWemediaSsr.ea402c65.js"</span>,</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"renderjs"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"b7a4a62b3fb8eb99e75f323ba865db77"</span>: &#123;</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"https://image.uc.cn/s/uae/g/1y/infoflow/assets/js/Article.lazy.4ff65a3e.js"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"ce8d98fcd6d93f5c63c34cc4f4ccf80f"</span>: &#123;</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"https://image.uc.cn/s/uae/g/1y/infoflow/assets/css/IflowPageWemedia.cc645f39.css"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"692fd503bfcc28b3ed745d9531f4fd00"</span>: &#123;</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"https://image.uc.cn/s/uae/g/1y/infoflow/assets/js/IflowPageWemedia.b88e2b3b.js"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三端同构"><a href="#三端同构" class="headerlink" title="三端同构"></a>三端同构</h3><p>减少人力维护成本</p><img src="/2019/11/22/NSR/three.png"><h3 id="优化后的信息流前端架构"><a href="#优化后的信息流前端架构" class="headerlink" title="优化后的信息流前端架构"></a>优化后的信息流前端架构</h3><p>对于闪开优化的诉求，我们期望结果是“首屏要极致的性能”。从理论上，不使用任何框架，直接使用原生 JS 处理首屏部分，性能才是最优的。但原生 JS 由于没有框架的约束，在持续迭代过程对维护者的能力要求较高（可理解为人力成本较高），而非首屏体验则不需要追求性能上的极致，因此持续迭代的过程应该用框架来进行约束。</p><img src="/2019/11/22/NSR/pureJSX.png"><p>正文技术架构将从下至上分成四层（在架构模式上与 UCWeex/Rax 体系基本类似）：</p><ol><li>底层：UFE + <a href="https://github.com/lerna/lerna" target="_blank" rel="noopener">Lerna</a> + Webpack + TypeScript + Tslint<br>前端工程化统一到我们自研的工程体系 UFE 架构体系下，目录则采用 Lerna（monorepo）架构来进行管理和约束。</li><li>框架：PureJSX + PreactJS<br>自研 PureJSX 框架，实现首屏业务的无前置框架依赖，支持 JSX 和 SSR 渲染，以解决首屏的性能问题；<br>非首屏的则采用 PreactJS 框架，但不引入 Redux，必要性不是很大。</li><li>组件层：UI 组件和 Widget 组件<br>PreactJS 和 PureJSX 的组件均遵循统一的 Base 基类，组件可互转，纯 UI 组件或函数组件直接使用<br>规范上，通过 TypeScript 和 TSLint 类型检测来进行约束。</li><li>发布管理层：超音速 + FEA 平台 + 云构建</li></ol><p>超音速平台：用于发布 H5 离线包，将 UFE 工程套件生成的离线资源下发到 App 端内；<br>FEA 管理平台：这是信息流前端团队自研的前端资源发布管理平台，在这里的作用是用于不支持离线包或未命中离线包资源的线上兜底版本的模板发布，支持对资源的灰度、回滚等；</p><p>区别于传统的 Web 端渲染方案，NSR 结合客户端上 JS 引擎的动态能力与 Rax 的渲染能力，在端上进行 HTML 直出渲染，有效缩短与 Web 内核交互的渲染路径，显著的加快了首屏渲染。结合端上智能决策系统，提前预判页面打开并提前预渲染，最终使页面首屏渲染体验有一个质的飞跃。 </p><h3 id="基于-PureJSX-的最小化重构"><a href="#基于-PureJSX-的最小化重构" class="headerlink" title="基于 PureJSX 的最小化重构"></a>基于 PureJSX 的最小化重构</h3><blockquote><p>一个没有Vdom的，但保留最小组件周期的React实现，只有1KB<br>信息流正文是一个有非常重历史包袱的项目，为了避开历史版本的兼容问题，上线的优化代码或模板是针对具备离线包能力的版本进行了切割，通过在服务端进行新旧版的模板匹配，在 UC12.0 以上版本上启用新模板，并与产品沟通后确认不再对旧版本进行新功能的迭代，只进行必要的维护。</p></blockquote><p>同时，在新版本的重构中，为了达到首屏的最小化依赖：</p><ol><li>在逻辑上将原来的如 Vue、Zepto、Lazyload 等基础类库剥离后，新加入的 Preact 类库在异步 chunk 中才会引入，不影响首屏；</li><li>在首屏的最小化模块中，其代码书写上仅使用兼容 ES5 的语法，保障首屏不再需要引入 Polyfill，而非首屏部分则不做限制；</li><li>重新定义首屏的功能，将原来包含 Dom 事件绑定、统计上报等逻辑全部移到非首屏的 Chunk 中。<br>其中，在作者的关注状态上，如果原来没有状态缓存而用户又有状态更新的，则关注区块的 UI 状态会发生变化而重绘（用户肉眼可见），我们说服了产品接受了这一点，因为这样做可以让正文不再依赖任何的前置请求和类库，进而极大地简化首屏的逻辑。</li></ol><h3 id="Rax"><a href="#Rax" class="headerlink" title="Rax"></a>Rax</h3><p><a href="https://github.com/alibaba/rax" target="_blank" rel="noopener">Rax</a>是基于React标准的跨容器解决方案，用成熟的React的语法标准，实现能在Weex，Web，WebGL等多种容器上渲染。它设计的核心思想是“React标准”和“跨容器”。<br>实现机制</p><h4 id="PHA"><a href="#PHA" class="headerlink" title="PHA"></a>PHA</h4><p>什么是 PHA，PHA 全称 Progressive Hybrid App，是提升 Hybrid 体验的一种新框架，我们提供了一些 Native 同层组件以及渐进式增强策略来创建 Hybrid APP 应用，让这些应用具有与 Native 相同的用户体验。<br>PHA 目标</p><ol><li>性能/体验：终端设备性能随着时间会逐渐提升（摩尔定律），2019.8.1 手淘 Android 机器内存 &gt;=6G 手机占比41.52%（UC同学提供数据支持），理论上 Web 的性能差距会和 Native 一步步缩小，但是现实是整体的业务复杂度也在不断的增加，导致整体的 Web 性能/体验与原生 Native 之间还是存在差距。</li><li>开发效率：面向标准的 Web 开发是前端开发者的首选。<br>基于以上这两点，我们希望以渐进式 Hybrid App 的方式，借助端能力不断改善端上 Web 页面的性能与体验，无限接近 Native 体验为目标。</li></ol><p>核心能力<br>借助 容器/内核能力 打造端上极致 Web 体验，支持的能力包括但不限于：</p><ul><li>直出/秒开方案：NSR 方案提供极致的性能</li><li>Tab 框架方案：通用 Web 业务场景的容器级 Tab 框架方案</li><li>无限列表滚动：支持 Dom 节点回收的 Virtual scroller</li><li>下拉刷新体验：保持与 Native 一致的下拉刷新体验</li><li>交互/富媒体组件：利用混合渲染能力支持 Native 组件增强</li></ul><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>一个公式： UI 页面 = F 模板 (Data 数据)<br>一个理论： 将模板和数据分拆，并尽可能保障在用户触达前获取，然后根据场景选择合适的组装“地点”。</p><p>参考文档：<br><a href="https://www.infoq.cn/article/9UKos4Xh_6wL4Fh1FOGL" target="_blank" rel="noopener">0.3s 完成渲染！UC 信息流正文“闪开”优化实践</a><br><a href="https://rax.js.org/" target="_blank" rel="noopener">Rax</a><br><a href="https://www.jianshu.com/p/8bea76c35450" target="_blank" rel="noopener">分享对Vue和Rax的一些理解</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;已有的渲染机制&quot;&gt;&lt;a href=&quot;#已有的渲染机制&quot; class=&quot;headerlink&quot; title=&quot;已有的渲染机制&quot;&gt;&lt;/a&gt;已有的渲染机制&lt;/h1&gt;&lt;h2 id=&quot;weex&quot;&gt;&lt;a href=&quot;#weex&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webpack4</title>
    <link href="http://yoursite.com/2019/09/17/webpack4/"/>
    <id>http://yoursite.com/2019/09/17/webpack4/</id>
    <published>2019-09-17T12:08:54.682Z</published>
    <updated>2019-09-28T07:46:11.175Z</updated>
    
    <content type="html"><![CDATA[<p>webpack4 </p><h2 id="AMD、CMD、CommonJs、ES6的对比"><a href="#AMD、CMD、CommonJs、ES6的对比" class="headerlink" title="AMD、CMD、CommonJs、ES6的对比"></a>AMD、CMD、CommonJs、ES6的对比</h2><blockquote><p>webpack4官方推荐使用CommonJs规范</p></blockquote><a id="more"></a> <h3 id="CommonJs（用于Node环境）"><a href="#CommonJs（用于Node环境）" class="headerlink" title="CommonJs（用于Node环境）"></a>CommonJs（用于Node环境）</h3><p>根据CommonJs规范，每个文件就是一个模块，有自己的作用域。在一个文件里面定义的变量、函数、类，都是私有的，对其他文件不可见，CommonJS规范加载模块是同步的，也就是说，加载完成才可以执行后面的操作，Node.js主要用于服务器编程，模块一般都是存在本地硬盘中，加载比较快，所以Node.js采用CommonJS规范。</p><h4 id="定义模块"><a href="#定义模块" class="headerlink" title="定义模块"></a>定义模块</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// module.js</span></span><br><span class="line"><span class="keyword">let</span> name = <span class="string">'zhanghui'</span>;</span><br><span class="line"><span class="keyword">let</span> sayName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(name);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123; name, sayName &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line">exports.sayName = sayName;</span><br></pre></td></tr></table></figure><h4 id="加载模块"><a href="#加载模块" class="headerlink" title="加载模块"></a>加载模块</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过 require 引入依赖</span></span><br><span class="line"><span class="keyword">let</span> <span class="built_in">module</span> = <span class="built_in">require</span>(<span class="string">'./module.js'</span>);</span><br><span class="line"><span class="built_in">module</span>.sayName(); <span class="comment">// zhanghui</span></span><br></pre></td></tr></table></figure><h4 id="module-export跟exports的区别"><a href="#module-export跟exports的区别" class="headerlink" title="module.export跟exports的区别"></a>module.export跟exports的区别</h4><ol><li><p>所有的 exports 对象最终都是通过 module.exports 传递执行，因此可以更确切地说，exports 是给 module.exports 添加属性和方法</p></li><li><p>module.exports 方法还可以单独返回一个数据类型(String、Number、Object…)，而 exports 只能返回一个 Object 对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exports.name = <span class="string">'zhanghui'</span>;</span><br><span class="line">exports.age = <span class="number">21</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">module</span>.exports); <span class="comment">// 运行结果：&#123; name: 'zhanghui', age: 21 &#125;</span></span><br></pre></td></tr></table></figure></li><li><p>同时用到module.export跟exports的时候</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 情况1</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123; <span class="attr">a</span>: <span class="number">1</span> &#125;</span><br><span class="line">exports.b = <span class="number">2</span>;</span><br><span class="line"> <span class="comment">// &#123; a:1 &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">module</span>.exports);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 情况2</span></span><br><span class="line"><span class="built_in">module</span>.exports.a =<span class="number">1</span>;</span><br><span class="line">exports.b = <span class="number">2</span>;</span><br><span class="line"> <span class="comment">// &#123; a:1, b:2 &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">module</span>.exports);</span><br></pre></td></tr></table></figure></li></ol><h3 id="AMD（用于浏览器环境）"><a href="#AMD（用于浏览器环境）" class="headerlink" title="AMD（用于浏览器环境）"></a>AMD（用于浏览器环境）</h3><blockquote><p>AMD是”Asynchronous Module Definition”的简写，也就是异步模块定义。它采用异步方式加载模块。通过define方法去定义模块，require方法去加载模块。</p></blockquote><p><a href="https://requirejs.org/" target="_blank" rel="noopener">requirejs官网</a></p><h4 id="定义模块-1"><a href="#定义模块-1" class="headerlink" title="定义模块"></a>定义模块</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">define([<span class="string">'module'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> name = <span class="string">'zhanghui'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">sayName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(name);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> &#123; sayName &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="使用模块"><a href="#使用模块" class="headerlink" title="使用模块"></a>使用模块</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过 require 引入依赖</span></span><br><span class="line"><span class="built_in">require</span>([<span class="string">'module'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">mod</span>) </span>&#123;</span><br><span class="line">   mod.sayName(); <span class="comment">// zhanghui</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="CMD（用于浏览器环境）"><a href="#CMD（用于浏览器环境）" class="headerlink" title="CMD（用于浏览器环境）"></a>CMD（用于浏览器环境）</h3><p>sea.js官网</p><h4 id="定义模块、使用模块"><a href="#定义模块、使用模块" class="headerlink" title="定义模块、使用模块"></a>定义模块、使用模块</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params">require, exports, module</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 通过 require 引入依赖</span></span><br><span class="line">   <span class="keyword">var</span> otherModule = <span class="built_in">require</span>(<span class="string">'./otherModule'</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 通过 exports 对外提供接口</span></span><br><span class="line">   exports.myModule = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 或者通过 module.exports 提供整个接口</span></span><br><span class="line">   <span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="ES6模块（用于浏览器环境）"><a href="#ES6模块（用于浏览器环境）" class="headerlink" title="ES6模块（用于浏览器环境）"></a>ES6模块（用于浏览器环境）</h3><blockquote><p>模块功能主要由两个命令构成：export和import。export命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能。</p></blockquote><h4 id="定义模块、输出变量"><a href="#定义模块、输出变量" class="headerlink" title="定义模块、输出变量"></a>定义模块、输出变量</h4><p>a.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123; <span class="attr">name</span>: <span class="string">'likang xie'</span> &#125;</span><br></pre></td></tr></table></figure><p>b.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 输出多个变量</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> name = <span class="string">'likang xie'</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> sayName = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(name);</span><br></pre></td></tr></table></figure><h4 id="使用模块-1"><a href="#使用模块-1" class="headerlink" title="使用模块"></a>使用模块</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> people <span class="keyword">from</span> <span class="string">'a.js'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(people); <span class="comment">// &#123; name: 'likang xie' &#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将所有获取到的变量存到people里</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> people <span class="keyword">from</span> <span class="string">'b.js'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(people); <span class="comment">// 一个module对象 &#123; name: 'likang xie', sayName: .... &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="keyword">import</span> &#123; name, sayName &#125; <span class="keyword">from</span> <span class="string">'b.js'</span>;</span><br></pre></td></tr></table></figure><hr><h2 id="项目搭建记录"><a href="#项目搭建记录" class="headerlink" title="项目搭建记录"></a>项目搭建记录</h2><p>因为是基于webpack4的，最好在开始配置前需要确保安装了Node.js是最新版本。 首先新建一个文件夹就叫my-webpack-cli吧，cd my-webpack-cli 之后运行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br><span class="line">npm install webpack webpack-cli webpack-merge webpack-dev-server --save-dev</span><br></pre></td></tr></table></figure><p>修改package.json文件，添加”private”: true移除”main”: “index.js”，以确保安装包是私有的，且不会意外发布代码。</p><p>新建一个build文件夹来存放配置文件，因为项目是要分还发环境和生产环境的，所以我们要把生产环境和开发环境的配置文件区分，又因为有些配置是公共的，所以需要一个公共配置文件，再通过webpack-merge来合并配置文件。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">my-webpack-cli</span><br><span class="line"><span class="string">|- build</span></span><br><span class="line">    <span class="string">|- webpack.base.conf.js</span></span><br><span class="line">    <span class="string">|- webpack.dev.conf.js</span></span><br><span class="line">    <span class="string">|- webpack.prod.conf.js</span></span><br><span class="line">    <span class="string">|- config.js</span></span><br><span class="line"><span class="string">|- package.json</span></span><br><span class="line"><span class="string">|- src</span></span><br><span class="line">    <span class="string">|- 略</span></span><br><span class="line"><span class="string">|- public</span></span><br><span class="line">    <span class="string">|-index.html</span></span><br></pre></td></tr></table></figure><p>webpack.base.conf.js：最基本的配置<br>webpack.dev.conf.js：开发环境的配置<br>webpack.prod.conf.js：生产环境的配置<br>新建src/main.js作为入口文件<br>新建public/index.html作为插入模板</p><h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><h4 id="webpack-base-conf-js配置入口和出口"><a href="#webpack-base-conf-js配置入口和出口" class="headerlink" title="webpack.base.conf.js配置入口和出口"></a>webpack.base.conf.js配置入口和出口</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">entry: &#123;</span><br><span class="line">  app: <span class="string">'./src/main.js'</span> </span><br><span class="line">&#125;</span><br><span class="line">output: &#123;</span><br><span class="line">  path: path.resolve(__dirname, <span class="string">'../dist'</span>),</span><br><span class="line">  filename: <span class="string">'js/[name].js'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="加载css、js、vue，图片等，相应的loader"><a href="#加载css、js、vue，图片等，相应的loader" class="headerlink" title="加载css、js、vue，图片等，相应的loader"></a>加载css、js、vue，图片等，相应的loader</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i style-loader css-loader vue-loader vue-style-loader vue-template-compiler url-loader file-loader babel-loader --save-dev</span><br></pre></td></tr></table></figure><p>css：style-loader css-loader<br>js：babel-loader<br>vue：vue-loader vue-style-loader vue-template-compiler<br>管理图片字体：url-loader或file-loader<br>eslint代码校验规范：eslint-loader</p><h4 id="babel7配置"><a href="#babel7配置" class="headerlink" title="babel7配置"></a>babel7配置</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .babelrc</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"presets"</span>: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"@babel/preset-env"</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"useBuiltIns"</span>: <span class="string">"usage"</span>,</span><br><span class="line">        <span class="string">"corejs"</span>: <span class="string">"3"</span> <span class="comment">// 声明corejs版本</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"plugins"</span>: [<span class="string">"@babel/plugin-transform-runtime"</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// webpack.base.conf.js</span></span><br><span class="line">&#123;</span><br><span class="line">  test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">  use: <span class="string">"babel-loader"</span>,</span><br><span class="line">  exclude: <span class="regexp">/node_modules/</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="vue-loader"><a href="#vue-loader" class="headerlink" title="vue-loader"></a>vue-loader</h4><p>Vue Loader 的配置和其它的 loader 不太一样。除了通过一条规则将 vue-loader 应用到所有扩展名为 .vue 的文件上之外，请确保在你的 webpack 配置中添加 Vue Loader 的插件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.base.con.js</span></span><br><span class="line"><span class="keyword">const</span> VueLoaderPlugin = <span class="built_in">require</span>(<span class="string">'vue-loader/lib/plugin'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      <span class="comment">// ... 其它规则</span></span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.vue$/</span>,</span><br><span class="line">        loader: <span class="string">'vue-loader'</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="comment">// 请确保引入这个插件！</span></span><br><span class="line">    <span class="keyword">new</span> VueLoaderPlugin()</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个插件是必须的！ 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块。例如，如果你有一条匹配 /\.js$/ 的规则，那么它会应用到 .vue 文件里的 &lt;script&gt; 块。</p><h4 id="样式前缀自动补充配置"><a href="#样式前缀自动补充配置" class="headerlink" title="样式前缀自动补充配置"></a>样式前缀自动补充配置</h4><p>需要安装postcss-loader autoprefixer同时还要添加.postcssrc.js配置文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .postcssrc.js</span></span><br><span class="line">plugins: &#123;</span><br><span class="line">  autoprefixer: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line">plugins: [</span><br><span class="line">  <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">// webpack.base.conf.js</span></span><br><span class="line">&#123;</span><br><span class="line">  test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">  <span class="comment">// exclude: /node_modules/,</span></span><br><span class="line">  use: [</span><br><span class="line">    env !== <span class="string">"production"</span></span><br><span class="line">      ? <span class="string">"vue-style-loader"</span></span><br><span class="line">      : MiniCssExtractPlugin.loader,</span><br><span class="line">    &#123;</span><br><span class="line">      loader: <span class="string">"css-loader"</span>,</span><br><span class="line">      <span class="comment">// importLoaders为 1 时 @import引入的css不会添加兼容写法</span></span><br><span class="line">      options: &#123; <span class="attr">importLoaders</span>: <span class="number">2</span> &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"postcss-loader"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>配置完成会你可能发现并没有自动添加前缀；这是由于autoprefixer会根据当前环境自动添加的。所以需要在package.json文件添加一点配置来保证打包的css会自动添加前缀</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"browserslist"</span>: [</span><br><span class="line">  <span class="string">"&gt; 1%"</span>,</span><br><span class="line">  <span class="string">"last 2 versions"</span>,</span><br><span class="line">  <span class="string">"not ie &lt;= 8"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>如果你的项目使用了@import来导入css，那么css-loader的配置参数importLoaders需要大于1。options: { importLoaders: 2 }</p><h4 id="plugins"><a href="#plugins" class="headerlink" title="plugins"></a>plugins</h4><p>要想将打包好的js、css资源自动插入到html文件中就需要安装html-webpack-plugin插件，这个插件会默认生成index.html</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">  filename: <span class="string">'index.html'</span>,</span><br><span class="line">  template: path.join(__dirname, <span class="string">'../public/index.html'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><ul><li>要打包前清空上一次dist文件可使用clean-webpack-plugin插件</li><li>要提取css使用mini-css-extract-plugin</li></ul></blockquote><h3 id="开发环境配置"><a href="#开发环境配置" class="headerlink" title="开发环境配置"></a>开发环境配置</h3><blockquote><p>利用webpack-dev-server</p></blockquote><h3 id="生产环境配置"><a href="#生产环境配置" class="headerlink" title="生产环境配置"></a>生产环境配置</h3><blockquote><p>开发环境和生产环境区分了，重新配置一下package.json文件</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  <span class="string">"dev"</span>: <span class="string">"set NODE_ENV=development &amp;&amp; webpack-dev-server --config build/webpack.dev.conf.js"</span>,</span><br><span class="line">  <span class="string">"build"</span>: <span class="string">"set NODE_ENV=production &amp;&amp; webpack --config build/webpack.prod.conf.js"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="优化体积打包"><a href="#优化体积打包" class="headerlink" title="优化体积打包"></a>优化体积打包</h4><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D BundleAnalyzerPlugin</span><br></pre></td></tr></table></figure><p>webpack.prod.conf.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (process.env.npm_config_report) &#123;</span><br><span class="line">  <span class="keyword">const</span> BundleAnalyzerPlugin = <span class="built_in">require</span>(<span class="string">'webpack-bundle-analyzer'</span>).BundleAnalyzerPlugin</span><br><span class="line">  webpackConfig.plugins.push(<span class="keyword">new</span> BundleAnalyzerPlugin())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>package.json</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"analyz"</span>: <span class="string">"set npm_config_report=true &amp;&amp; npm run build"</span></span><br></pre></td></tr></table></figure><h3 id="完整的package-json"><a href="#完整的package-json" class="headerlink" title="完整的package.json"></a>完整的package.json</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"my-webpack-cli"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="string">"dev"</span>: <span class="string">"set NODE_ENV=development &amp;&amp; webpack-dev-server --config build/webpack.dev.conf.js"</span>,</span><br><span class="line">    <span class="string">"build"</span>: <span class="string">"set NODE_ENV=production &amp;&amp; webpack --config build/webpack.prod.conf.js"</span>,</span><br><span class="line">    <span class="string">"analyz"</span>: <span class="string">"set npm_config_report=true &amp;&amp; npm run build"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"keywords"</span>: [],</span><br><span class="line">  <span class="string">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="string">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"@babel/core"</span>: <span class="string">"^7.6.2"</span>,</span><br><span class="line">    <span class="string">"@babel/plugin-transform-runtime"</span>: <span class="string">"^7.6.2"</span>,</span><br><span class="line">    <span class="string">"@babel/preset-env"</span>: <span class="string">"^7.6.2"</span>,</span><br><span class="line">    <span class="string">"autoprefixer"</span>: <span class="string">"^9.6.1"</span>,</span><br><span class="line">    <span class="string">"babel-loader"</span>: <span class="string">"^8.0.6"</span>,</span><br><span class="line">    <span class="string">"clean-webpack-plugin"</span>: <span class="string">"^3.0.0"</span>,</span><br><span class="line">    <span class="string">"core-js"</span>: <span class="string">"^3.2.1"</span>,</span><br><span class="line">    <span class="string">"css-loader"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">    <span class="string">"file-loader"</span>: <span class="string">"^4.2.0"</span>,</span><br><span class="line">    <span class="string">"html-webpack-plugin"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">    <span class="string">"mini-css-extract-plugin"</span>: <span class="string">"^0.8.0"</span>,</span><br><span class="line">    <span class="string">"optimize-css-assets-webpack-plugin"</span>: <span class="string">"^5.0.3"</span>,</span><br><span class="line">    <span class="string">"postcss-loader"</span>: <span class="string">"^3.0.0"</span>,</span><br><span class="line">    <span class="string">"progress-bar-webpack-plugin"</span>: <span class="string">"^1.12.1"</span>,</span><br><span class="line">    <span class="string">"style-loader"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="string">"url-loader"</span>: <span class="string">"^2.1.0"</span>,</span><br><span class="line">    <span class="string">"vue-loader"</span>: <span class="string">"^15.7.1"</span>,</span><br><span class="line">    <span class="string">"vue-style-loader"</span>: <span class="string">"^4.1.2"</span>,</span><br><span class="line">    <span class="string">"vue-template-compiler"</span>: <span class="string">"^2.6.10"</span>,</span><br><span class="line">    <span class="string">"webpack"</span>: <span class="string">"^4.41.0"</span>,</span><br><span class="line">    <span class="string">"webpack-bundle-analyzer"</span>: <span class="string">"^3.5.2"</span>,</span><br><span class="line">    <span class="string">"webpack-cli"</span>: <span class="string">"^3.3.9"</span>,</span><br><span class="line">    <span class="string">"webpack-dev-server"</span>: <span class="string">"^3.8.1"</span>,</span><br><span class="line">    <span class="string">"webpack-merge"</span>: <span class="string">"^4.2.2"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"vue"</span>: <span class="string">"^2.6.10"</span>,</span><br><span class="line">    <span class="string">"vue-router"</span>: <span class="string">"^3.1.3"</span>,</span><br><span class="line">    <span class="string">"vuex"</span>: <span class="string">"^3.1.1"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结合快路宝项目"><a href="#结合快路宝项目" class="headerlink" title="结合快路宝项目"></a>结合快路宝项目</h2><p>开始安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br><span class="line">npm install webpack webpack-cli webpack-merge --save-dev</span><br></pre></td></tr></table></figure><p>创建目录</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">my-webpack</span><br><span class="line"><span class="string">|- build</span></span><br><span class="line">    <span class="string">|- webpack.base.conf.js</span></span><br><span class="line">    <span class="string">|- webpack.dev.conf.js</span></span><br><span class="line">    <span class="string">|- webpack.pro.conf.js</span></span><br><span class="line">    <span class="string">|- config.js</span></span><br><span class="line"><span class="string">|- package.json</span></span><br><span class="line"><span class="string">|- src</span></span><br><span class="line">    <span class="string">|- 略</span></span><br></pre></td></tr></table></figure><h3 id="webpack-base-conf-js"><a href="#webpack-base-conf-js" class="headerlink" title="webpack.base.conf.js"></a>webpack.base.conf.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>);</span><br><span class="line"><span class="keyword">const</span> utils = <span class="built_in">require</span>(<span class="string">'./utils'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="built_in">require</span>(<span class="string">"clean-webpack-plugin"</span>);</span><br><span class="line"><span class="comment">// const VueLoaderPlugin = require("vue-loader/lib/plugin");</span></span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">"mini-css-extract-plugin"</span>);</span><br><span class="line"><span class="keyword">const</span> env = process.env.NODE_ENV.trim();</span><br><span class="line"><span class="keyword">const</span> vuxLoader = <span class="built_in">require</span>(<span class="string">"vux-loader"</span>);</span><br><span class="line"><span class="keyword">const</span> webpackConfig = &#123;</span><br><span class="line">  entry: &#123;</span><br><span class="line">    app: <span class="string">"./src/main.js"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// output: &#123;</span></span><br><span class="line">  <span class="comment">//   path: path.resolve(__dirname, "../dist"),</span></span><br><span class="line">  <span class="comment">//   filename: "js/[name].js"</span></span><br><span class="line">  <span class="comment">// &#125;,</span></span><br><span class="line">  resolve: &#123;</span><br><span class="line">    extensions: [<span class="string">".js"</span>, <span class="string">".vue"</span>, <span class="string">".json"</span>],</span><br><span class="line">    alias: &#123;</span><br><span class="line">      <span class="string">"@"</span>: path.join(__dirname, <span class="string">"../src"</span>),</span><br><span class="line">      vue$: <span class="string">"vue/dist/vue.esm.js"</span> <span class="comment">//内部为正则表达式  vue结尾的</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        <span class="comment">// exclude: /node_modules/,</span></span><br><span class="line">        use: [</span><br><span class="line">          env !== <span class="string">"production"</span></span><br><span class="line">            ? <span class="string">"vue-style-loader"</span></span><br><span class="line">            : MiniCssExtractPlugin.loader,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">"css-loader"</span>,</span><br><span class="line">            <span class="comment">// importLoaders为 1 时 @import引入的css不会添加兼容写法</span></span><br><span class="line">            options: &#123; <span class="attr">importLoaders</span>: <span class="number">2</span> &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"postcss-loader"</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        <span class="comment">// exclude: /node_modules/,</span></span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">"vue-style-loader"</span> <span class="comment">// creates style nodes from JS strings</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">"css-loader"</span> <span class="comment">// translates CSS into CommonJS</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">"less-loader"</span> <span class="comment">// compiles Less to CSS</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// &#123;</span></span><br><span class="line">      <span class="comment">//   enforce: 'pre',</span></span><br><span class="line">      <span class="comment">//   test: /\.(js|vue)$/,</span></span><br><span class="line">      <span class="comment">//   loader: 'eslint-loader',</span></span><br><span class="line">      <span class="comment">//   options: &#123;</span></span><br><span class="line">      <span class="comment">//     formatter: require('eslint-formatter-pretty')</span></span><br><span class="line">      <span class="comment">//   &#125;,</span></span><br><span class="line">      <span class="comment">//   exclude: /node_modules/</span></span><br><span class="line">      <span class="comment">// &#125;,</span></span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.vue$/</span>,</span><br><span class="line">        <span class="comment">// use: "vue-loader"</span></span><br><span class="line">        <span class="comment">// use: [&#123;loader: 'vue-loader'&#125;]</span></span><br><span class="line">        loader: <span class="string">"vue-loader"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        use: <span class="string">"babel-loader"</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(png|jpe?g|gif|svg)(\?.*)?$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">"url-loader"</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              limit: <span class="number">10000</span>,</span><br><span class="line">              name: utils.assetsPath(<span class="string">'img/[name].[hash:7].[ext]'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(woff2?|eot|ttf|otf)(\?.*)?$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">"url-loader"</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              limit: <span class="number">10000</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="comment">// 清除 dist 文件</span></span><br><span class="line">    <span class="keyword">new</span> CleanWebpackPlugin(),</span><br><span class="line">    <span class="comment">// new VueLoaderPlugin(),</span></span><br><span class="line">    <span class="comment">// CSS 提取</span></span><br><span class="line">    <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">      filename: utils.assetsPath(<span class="string">'css/[name].[contenthash:7].css'</span>),</span><br><span class="line">      chunkFilename: utils.assetsPath(<span class="string">'css/chunk[name].[contenthash:7].css'</span>),</span><br><span class="line">      ignoreOrder: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">module</span>.exports = vuxLoader.merge(webpackConfig, &#123;</span><br><span class="line">  plugins: [<span class="string">"vux-ui"</span>, <span class="string">"duplicate-style"</span>]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="webpack-dev-conf-js"><a href="#webpack-dev-conf-js" class="headerlink" title="webpack.dev.conf.js"></a>webpack.dev.conf.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* eslint-disable */</span></span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> config =  <span class="built_in">require</span>(<span class="string">'./config'</span>)</span><br><span class="line"><span class="keyword">const</span> os = <span class="built_in">require</span>(<span class="string">'os'</span>);</span><br><span class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>);</span><br><span class="line"><span class="keyword">const</span> WebpackBaseConfig = <span class="built_in">require</span>(<span class="string">'./webpack.base.conf'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> ProgressBarPlugin = <span class="built_in">require</span>(<span class="string">'progress-bar-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">let</span> dServe = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> hadFinishd = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> DevWebpackConfig = merge(WebpackBaseConfig, &#123;</span><br><span class="line">  mode: <span class="string">'development'</span>,</span><br><span class="line">  devtool: <span class="string">'inline-source-map'</span>,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    contentBase: path.join(__dirname, <span class="string">'../dist'</span>),</span><br><span class="line">    compress: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// // 控制台初始启动信息之外都不显示</span></span><br><span class="line">    <span class="comment">// quiet: true,</span></span><br><span class="line">    host: config.dev.host,</span><br><span class="line">    port: config.dev.port,</span><br><span class="line">    noInfo: <span class="literal">true</span>,</span><br><span class="line">    stats: <span class="string">"errors-only"</span>,</span><br><span class="line">    open: config.dev.autoOpenBrowser,</span><br><span class="line">    clientLogLevel: <span class="string">'none'</span>,</span><br><span class="line">    hot: <span class="literal">true</span>,</span><br><span class="line">    overlay: config.dev.showsErrFullScreen,</span><br><span class="line">    proxy: config.dev.proxy,</span><br><span class="line">    watchOptions: &#123;</span><br><span class="line">      ignored: <span class="regexp">/node_modules/</span>,</span><br><span class="line">      aggregateTimeout: <span class="number">500</span>,</span><br><span class="line">      poll: <span class="number">500</span></span><br><span class="line">    &#125;,</span><br><span class="line">    after (app, server) &#123;</span><br><span class="line">      dServe = server</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      filename: <span class="string">'index.html'</span>,</span><br><span class="line">      template: path.join(__dirname, <span class="string">'..'</span>, <span class="string">'public/index.html'</span>)</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// webpack编译进度(还可使用 Friendly-errors-webpack-plugin 插件)</span></span><br><span class="line">    config.dev.terminalProcess === <span class="string">'bar'</span></span><br><span class="line">      ? <span class="keyword">new</span> ProgressBarPlugin(&#123;</span><br><span class="line">          complete: <span class="string">'-'</span>,</span><br><span class="line">          format: <span class="string">'  build [:bar] :percent (:elapsed seconds)'</span>,</span><br><span class="line">          clear: <span class="literal">false</span></span><br><span class="line">        &#125;)</span><br><span class="line">      : <span class="keyword">new</span> webpack.ProgressPlugin(processHandler)</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = DevWebpackConfig</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIPAdress</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> localIPAddress = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">let</span> interfaces = os.networkInterfaces();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> devName <span class="keyword">in</span> interfaces) &#123;</span><br><span class="line">    <span class="keyword">let</span> iface = interfaces[devName];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; iface.length; i++) &#123;</span><br><span class="line">      <span class="keyword">let</span> alias = iface[i];</span><br><span class="line">      <span class="keyword">if</span> (alias.family === <span class="string">'IPv4'</span> &amp;&amp; alias.address !== <span class="string">'127.0.0.1'</span> &amp;&amp; !alias.internal) &#123;</span><br><span class="line">        localIPAddress = alias.address;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> localIPAddress</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印服务启动的地址以及一些提示</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">terminalLog</span> (<span class="params">server</span>) </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * \033[背景色编号;字色编号m</span></span><br><span class="line"><span class="comment">   * 字色编号：30黑，31红，32绿，33黄，34蓝，35紫，36深绿，37白色</span></span><br><span class="line"><span class="comment">   * 背景编号：40黑，41红，42绿，43黄，44蓝，45紫，46深绿，47白色</span></span><br><span class="line"><span class="comment">   * \033[0m 关闭所有属性</span></span><br><span class="line"><span class="comment">   * \033[1m 设置高亮度</span></span><br><span class="line"><span class="comment">   * \033[4m 下划线</span></span><br><span class="line"><span class="comment">   * \033[5m 闪烁</span></span><br><span class="line"><span class="comment">   * \033[7m 反显</span></span><br><span class="line"><span class="comment">   * \033[8m 消隐</span></span><br><span class="line"><span class="comment">   * \033[nA 光标上移n行</span></span><br><span class="line"><span class="comment">   * \033[nB 光标下移n行</span></span><br><span class="line"><span class="comment">   * \033[nC 光标右移n列</span></span><br><span class="line"><span class="comment">   * \033[nD 光标左移n列</span></span><br><span class="line"><span class="comment">   * \033[y;xH 设置光标位置（y列x行）</span></span><br><span class="line"><span class="comment">   * \033[2J 清屏</span></span><br><span class="line"><span class="comment">   * \033[K 清除从光标到行尾的内容</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">let</span> devServer = server.compiler.options.devServer;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Use \033[40;33mCtrl+C\033[0m to close it\r\n'</span>)</span><br><span class="line">  <span class="keyword">if</span> (devServer.host === <span class="string">'localhost'</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(</span><br><span class="line">      <span class="string">'App running at:\n'</span> +</span><br><span class="line">      <span class="string">'- Local:   \033[40;35mhttp://localhost:'</span> + devServer.port +<span class="string">'/\033[0m\n'</span> +</span><br><span class="line">      <span class="string">'           \033[40;35mhttp://127.0.0.1:'</span> + devServer.port +<span class="string">'/\033[0m\r\n'</span></span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (devServer.host === <span class="string">'0.0.0.0'</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(</span><br><span class="line">      <span class="string">'App running at:\n'</span> +</span><br><span class="line">      <span class="string">'- Local:   \033[40;35mhttp://localhost:'</span> + devServer.port +<span class="string">'/\033[0m\n'</span> +</span><br><span class="line">      <span class="string">'           \033[40;35mhttp://'</span> + devServer.host + <span class="string">':'</span> + devServer.port +<span class="string">'/\033[0m\n'</span> +</span><br><span class="line">      <span class="string">'- Network: \033[40;35mhttp://'</span> + getIPAdress() + <span class="string">':'</span> + devServer.port +<span class="string">'/\033[0m\r\n'</span></span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(</span><br><span class="line">      <span class="string">'App running at:\n'</span> +</span><br><span class="line">      <span class="string">'- Network: \033[40;35mhttp://'</span> + devServer.host + <span class="string">':'</span> + devServer.port +<span class="string">'/\033[0m\r\n'</span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'In production mode you need to run\033[40;34m npm run build\033[0m\n'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印编译、打包进度（terminalProcess值为default时启用）</span></span><br><span class="line"><span class="keyword">let</span> firstInfo = <span class="literal">false</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">processHandler</span> (<span class="params">percentage, message, ...args</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> process = <span class="built_in">require</span>(<span class="string">'process'</span>);</span><br><span class="line">  <span class="keyword">if</span> (percentage &lt;= <span class="number">0</span> &amp;&amp; !firstInfo) &#123;</span><br><span class="line">    firstInfo = <span class="literal">true</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'\033[44;30m Info \033[0m \033[40;34m Compiling...\033[0m\n'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  process.stdout.write(<span class="string">`<span class="subst">$&#123;percentage.toFixed(<span class="number">2</span>) * <span class="number">100</span>&#125;</span>% building message:<span class="subst">$&#123;message&#125;</span>\r`</span>)</span><br><span class="line">  <span class="keyword">if</span> (percentage &gt;= <span class="number">1</span> &amp;&amp; hadFinishd) &#123;</span><br><span class="line">    firstInfo = <span class="literal">false</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'\n\033[42;30m Done \033[0m \033[40;32m Successful compilation\n'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> compiler = webpack(DevWebpackConfig);</span><br><span class="line">compiler.run(<span class="function">(<span class="params">err, stats</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (config.dev.terminalProcess !== <span class="string">'bar'</span>) &#123;</span><br><span class="line">    hadFinishd = <span class="literal">true</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'\n\033[42;30m Done \033[0m \033[40;32m Successful compilation in '</span>+ (stats.endTime - stats.startTime) + <span class="string">'ms \033[0m\n'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  terminalLog(dServe)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="webpack-pro-conf-js"><a href="#webpack-pro-conf-js" class="headerlink" title="webpack.pro.conf.js"></a>webpack.pro.conf.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">"./config"</span>);</span><br><span class="line"><span class="keyword">const</span> utils = <span class="built_in">require</span>(<span class="string">"./utils"</span>);</span><br><span class="line"><span class="keyword">const</span> WebpackBaseConfig = <span class="built_in">require</span>(<span class="string">"./webpack.base.conf"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>);</span><br><span class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">"webpack-merge"</span>);</span><br><span class="line"><span class="keyword">const</span> CopyWebpackPlugin = <span class="built_in">require</span>(<span class="string">"copy-webpack-plugin"</span>);</span><br><span class="line"><span class="keyword">const</span> TerserJSPlugin = <span class="built_in">require</span>(<span class="string">'terser-webpack-plugin'</span>)</span><br><span class="line"><span class="comment">// const webpack = require('webpack')</span></span><br><span class="line"><span class="keyword">const</span> OptimizeCSSAssetsPlugin = <span class="built_in">require</span>(<span class="string">"optimize-css-assets-webpack-plugin"</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">"html-webpack-plugin"</span>);</span><br><span class="line"><span class="keyword">const</span> SpeedMeasurePlugin = <span class="built_in">require</span>(<span class="string">"speed-measure-webpack-plugin"</span>);</span><br><span class="line"><span class="keyword">const</span> smp = <span class="keyword">new</span> SpeedMeasurePlugin();</span><br><span class="line"><span class="keyword">const</span> webpackConfig = smp.wrap(</span><br><span class="line">  merge(WebpackBaseConfig, &#123;</span><br><span class="line">    mode: <span class="string">"production"</span>,</span><br><span class="line">    devtool: config.build.sourceMap ? <span class="string">"source-map"</span> : <span class="string">""</span>,</span><br><span class="line">    output: config.build.output,</span><br><span class="line">    externals: &#123;</span><br><span class="line">      vue: <span class="string">"Vue"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">      <span class="comment">// 将打包好的js、css文件插入index.html</span></span><br><span class="line">      <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">        filename: <span class="string">"index.html"</span>,</span><br><span class="line">        template: path.join(__dirname, <span class="string">"../public/index.html"</span>),</span><br><span class="line">        minify: &#123;</span><br><span class="line">          removeComments: <span class="literal">true</span>,</span><br><span class="line">          collapseWhitespace: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="comment">// copy custom static assets</span></span><br><span class="line">      <span class="keyword">new</span> CopyWebpackPlugin([</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">from</span>: path.resolve(__dirname, <span class="string">"../static"</span>),</span><br><span class="line">          to: <span class="string">"static"</span>,</span><br><span class="line">          ignore: [<span class="string">".*"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      ])</span><br><span class="line">    ],</span><br><span class="line">    optimization: &#123;</span><br><span class="line">      minimizer: [</span><br><span class="line">        <span class="comment">// 压缩css文件</span></span><br><span class="line">        <span class="keyword">new</span> OptimizeCSSAssetsPlugin(), <span class="comment">// 压缩 css,使用minimizer会自动取消webpack的默认配置，所以记得用terser-webpack-plugin</span></span><br><span class="line">        <span class="keyword">new</span> TerserJSPlugin()</span><br><span class="line">      ],</span><br><span class="line">      <span class="comment">// 提取公共文件(webpack 4.x已删除CommonsChunkPlugin改用SplitChunksPlugin)</span></span><br><span class="line">      splitChunks: &#123;</span><br><span class="line">        automaticNameDelimiter: <span class="string">"-"</span>,</span><br><span class="line">        chunks: <span class="string">"all"</span>,</span><br><span class="line">        cacheGroups: &#123;</span><br><span class="line">          <span class="comment">// 所有第三方js打包到 vendor.js 如要分打包，去掉 name 属性或手动配置</span></span><br><span class="line">          vendor: &#123;</span><br><span class="line">            test: <span class="regexp">/node_modules/</span>,</span><br><span class="line">            chunks: <span class="string">"initial"</span>,</span><br><span class="line">            name: <span class="string">"vendors"</span>,</span><br><span class="line">            priority: <span class="number">10</span>,</span><br><span class="line">            enforce: <span class="literal">true</span></span><br><span class="line">          &#125;,</span><br><span class="line">          commons: &#123;</span><br><span class="line">            chunks: <span class="string">"initial"</span>,</span><br><span class="line">            minChunks: <span class="number">2</span>,</span><br><span class="line">            maxInitialRequests: <span class="number">5</span>,</span><br><span class="line">            minSize: <span class="number">0</span>,</span><br><span class="line">            reuseExistingChunk: <span class="literal">true</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      runtimeChunk: <span class="string">"single"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (process.env.npm_config_report) &#123;</span><br><span class="line">  <span class="keyword">const</span> BundleAnalyzerPlugin = <span class="built_in">require</span>(<span class="string">"webpack-bundle-analyzer"</span>)</span><br><span class="line">    .BundleAnalyzerPlugin;</span><br><span class="line">  webpackConfig.plugins.push(<span class="keyword">new</span> BundleAnalyzerPlugin());</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = webpackConfig;</span><br></pre></td></tr></table></figure><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>);</span><br><span class="line"><span class="keyword">const</span> utils = <span class="built_in">require</span>(<span class="string">'./utils'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> config = &#123;</span><br><span class="line">  dev: &#123;</span><br><span class="line">    host: <span class="string">"localhost"</span>,</span><br><span class="line">    port:<span class="number">20131</span>,</span><br><span class="line">    <span class="comment">// 查看编译进度，可选值: (bar | default)</span></span><br><span class="line">    terminalProcess: <span class="string">"default"</span>,</span><br><span class="line">    <span class="comment">// 是否自动在浏览器打开</span></span><br><span class="line">    autoOpenBrowser: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// 错误信息是否在屏幕上显示</span></span><br><span class="line">    showsErrFullScreen: <span class="literal">false</span>,</span><br><span class="line">    proxy: &#123;</span><br><span class="line">      <span class="string">"/api"</span>: &#123;</span><br><span class="line">        target: <span class="string">"http://220.248.226.76:20131/luge"</span>,</span><br><span class="line">        <span class="comment">// target: "http://192.168.223.10:21789/luge",</span></span><br><span class="line">        changeOrigin: <span class="literal">true</span>,</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">          <span class="string">"^/api"</span>: <span class="string">""</span> <span class="comment">//这里理解成用‘/api’代替target里面的地址，后面组件中我们掉接口时直接用api代替</span></span><br><span class="line">          <span class="comment">//http://192.168.4.30:8080/truck_home</span></span><br><span class="line">          <span class="comment">//比如我要调用'http://thtest.log56.com/truck_home'，直接写‘/api/user/login’即可</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  build: &#123;</span><br><span class="line">    sourceMap: <span class="literal">false</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">      path: path.resolve(__dirname, <span class="string">"../dist"</span>),</span><br><span class="line">      filename: utils.assetsPath(<span class="string">'js/[name].[chunkhash].js'</span>),</span><br><span class="line">      chunkFilename: utils.assetsPath(<span class="string">'js/[id].[chunkhash].js'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = config;</span><br></pre></td></tr></table></figure><h3 id="utils"><a href="#utils" class="headerlink" title="utils"></a>utils</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//之后的发布版本号都在这里修改</span></span><br><span class="line">exports.assetsPath = <span class="function"><span class="keyword">function</span>(<span class="params">_path</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> assetsSubDirectory = process.env.NODE_ENV.trim() == <span class="string">"production"</span> ? <span class="string">"V2.1.2"</span> : <span class="string">"static"</span>;</span><br><span class="line">  <span class="keyword">return</span> path.posix.join(assetsSubDirectory, _path);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"my-webpack-cli"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"dev"</span>: <span class="string">"set NODE_ENV=development &amp;&amp; webpack-dev-server --config build/webpack.dev.conf.js"</span>,</span><br><span class="line">    <span class="string">"build"</span>: <span class="string">"set NODE_ENV=production &amp;&amp; webpack --config build/webpack.prod.conf.js"</span>,</span><br><span class="line">    <span class="string">"analyz"</span>: <span class="string">"set npm_config_report=true &amp;&amp; npm run build"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"keywords"</span>: [],</span><br><span class="line">  <span class="string">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="string">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"@babel/core"</span>: <span class="string">"^7.5.5"</span>,</span><br><span class="line">    <span class="string">"@babel/plugin-syntax-dynamic-import"</span>: <span class="string">"^7.2.0"</span>,</span><br><span class="line">    <span class="string">"@babel/plugin-transform-runtime"</span>: <span class="string">"^7.6.0"</span>,</span><br><span class="line">    <span class="string">"@babel/preset-env"</span>: <span class="string">"^7.5.5"</span>,</span><br><span class="line">    <span class="string">"autoprefixer"</span>: <span class="string">"^9.6.1"</span>,</span><br><span class="line">    <span class="string">"babel-loader"</span>: <span class="string">"^8.0.6"</span>,</span><br><span class="line">    <span class="string">"babel-plugin-import"</span>: <span class="string">"^1.12.1"</span>,</span><br><span class="line">    <span class="string">"clean-webpack-plugin"</span>: <span class="string">"^3.0.0"</span>,</span><br><span class="line">    <span class="string">"core-js"</span>: <span class="string">"^3.2.1"</span>,</span><br><span class="line">    <span class="string">"css-loader"</span>: <span class="string">"^3.1.0"</span>,</span><br><span class="line">    <span class="string">"es6-promise"</span>: <span class="string">"^4.2.5"</span>,</span><br><span class="line">    <span class="string">"file-loader"</span>: <span class="string">"^1.1.4"</span>,</span><br><span class="line">    <span class="string">"html-webpack-plugin"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">    <span class="string">"js-sha1"</span>: <span class="string">"^0.6.0"</span>,</span><br><span class="line">    <span class="string">"less"</span>: <span class="string">"^3.8.1"</span>,</span><br><span class="line">    <span class="string">"less-loader"</span>: <span class="string">"^4.1.0"</span>,</span><br><span class="line">    <span class="string">"mini-css-extract-plugin"</span>: <span class="string">"^0.8.0"</span>,</span><br><span class="line">    <span class="string">"optimize-css-assets-webpack-plugin"</span>: <span class="string">"^5.0.3"</span>,</span><br><span class="line">    <span class="string">"postcss-import"</span>: <span class="string">"^11.0.0"</span>,</span><br><span class="line">    <span class="string">"postcss-loader"</span>: <span class="string">"^3.0.0"</span>,</span><br><span class="line">    <span class="string">"postcss-url"</span>: <span class="string">"^7.2.1"</span>,</span><br><span class="line">    <span class="string">"prettier"</span>: <span class="string">"^1.12.1"</span>,</span><br><span class="line">    <span class="string">"progress-bar-webpack-plugin"</span>: <span class="string">"^1.12.1"</span>,</span><br><span class="line">    <span class="string">"style-loader"</span>: <span class="string">"^0.23.1"</span>,</span><br><span class="line">    <span class="string">"uglifyjs-webpack-plugin"</span>: <span class="string">"^2.2.0"</span>,</span><br><span class="line">    <span class="string">"url-loader"</span>: <span class="string">"^0.5.8"</span>,</span><br><span class="line">    <span class="string">"vconsole"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">    <span class="string">"vue-loader"</span>: <span class="string">"^14.1.1"</span>,</span><br><span class="line">    <span class="string">"vue-style-loader"</span>: <span class="string">"^4.1.2"</span>,</span><br><span class="line">    <span class="string">"vue-template-compiler"</span>: <span class="string">"^2.6.10"</span>,</span><br><span class="line">    <span class="string">"vux-loader"</span>: <span class="string">"^1.2.9"</span>,</span><br><span class="line">    <span class="string">"webpack"</span>: <span class="string">"^4.38.0"</span>,</span><br><span class="line">    <span class="string">"webpack-bundle-analyzer"</span>: <span class="string">"^3.5.2"</span>,</span><br><span class="line">    <span class="string">"webpack-cli"</span>: <span class="string">"^3.3.6"</span>,</span><br><span class="line">    <span class="string">"webpack-dev-server"</span>: <span class="string">"^3.7.2"</span>,</span><br><span class="line">    <span class="string">"webpack-merge"</span>: <span class="string">"^4.2.1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"axios"</span>: <span class="string">"^0.18.0"</span>,</span><br><span class="line">    <span class="string">"fastclick"</span>: <span class="string">"^1.0.6"</span>,</span><br><span class="line">    <span class="string">"lrz"</span>: <span class="string">"^4.9.40"</span>,</span><br><span class="line">    <span class="string">"vant"</span>: <span class="string">"^2.0.1"</span>,</span><br><span class="line">    <span class="string">"vue"</span>: <span class="string">"^2.6.10"</span>,</span><br><span class="line">    <span class="string">"vue-router"</span>: <span class="string">"^3.0.7"</span>,</span><br><span class="line">    <span class="string">"vuex"</span>: <span class="string">"^3.1.1"</span>,</span><br><span class="line">    <span class="string">"vux"</span>: <span class="string">"^2.9.2"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"browserslist"</span>: [</span><br><span class="line">    <span class="string">"&gt; 1%"</span>,</span><br><span class="line">    <span class="string">"last 2 versions"</span>,</span><br><span class="line">    <span class="string">"not ie &lt;= 8"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="es6"><a href="#es6" class="headerlink" title="es6"></a>es6</h2><p>下面我们进行es6的配置，由于es6未被所有浏览器全面支持，所有我们在使用的时候还想需要将其转换为es5.主要用到的工具是babel，先进行babel依赖的安装。</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> i -D @babel/core @babel/plugin-transform-runtime @babel/preset-env babel-loader</span><br></pre></td></tr></table></figure><h2 id="eslint"><a href="#eslint" class="headerlink" title="eslint"></a>eslint</h2><blockquote><p>因要适配本项目，其中大量不符合eslint的地方，暂未实现。</p></blockquote><h2 id="QA-amp-对比"><a href="#QA-amp-对比" class="headerlink" title="QA&amp;对比"></a>QA&amp;对比</h2><h3 id="webpack4的变化"><a href="#webpack4的变化" class="headerlink" title="webpack4的变化"></a>webpack4的变化</h3><blockquote><p>我们主要关注那些对我们影响比较大的改动如：optimization.splitChunks代替原有的CommonsChunkPlugin，和Better Defaults-mode更好的默认配置，这是大家稍微需要关注一下的。</p></blockquote><table><thead><tr><th>废弃项</th><th>替代项(optimization)</th><th>主要功能</th></tr></thead><tbody><tr><td>UglifyjsWebpackPlugin</td><td>.minimize</td><td>压缩优化</td></tr><tr><td>ModuleConcatenationPlugin</td><td>.opconcatenateModules</td><td>Scope hoisting</td></tr><tr><td>CommonsChunkPlugin</td><td>.splitChunks/.runtimeChunk</td><td>Code splitting</td></tr><tr><td>NoEmitOnErrorsPlugin</td><td>noEmitOnErrors/.runtimeChunk</td><td>编译出现错误，跳过输出阶段</td></tr></tbody></table><h3 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h3><p>在入门篇中，我们每次编译后都会出现he ‘mode’ option has not been set的警告。这是webpack4新增的mode属性，有两种mode，development和production.</p><ul><li>development模式：<ul><li>将process.env.NODE_ENV的值设为 development，过去需要通过webpack.DefinePlugin进行配置。</li><li>提供注释、开发阶段的详细错误日志和提示。</li></ul></li><li>production模式:<ul><li>将process.env.NODE_ENV的值设为 production，过去需要通过webpack.DefinePlugin进行配置。</li><li>开启所有的优化代码，压缩插件UglifyJsPlugin，过去需要自行配置。</li><li>去掉一些只在开发中运行的代码。</li></ul></li></ul><p>development 模式下，默认开启了NamedChunksPlugin 和NamedModulesPlugin方便调试，提供了更完整的错误信息，更快的重新编译的速度。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line"><span class="addition">+ mode: 'development'</span></span><br><span class="line"><span class="deletion">- devtool: 'eval',</span></span><br><span class="line"><span class="deletion">- plugins: [</span></span><br><span class="line"><span class="deletion">-   new webpack.NamedModulesPlugin(),</span></span><br><span class="line"><span class="deletion">-   new webpack.NamedChunksPlugin(),</span></span><br><span class="line"><span class="deletion">-   new webpack.DefinePlugin(&#123; "process.env.NODE_ENV": JSON.stringify("development") &#125;),</span></span><br><span class="line"><span class="deletion">- ]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>production 模式下，由于提供了splitChunks和minimize，所以基本零配置，代码就会自动分割、压缩、优化，同时 webpack 也会自动帮你 Scope hoisting 和 Tree-shaking。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line"><span class="addition">+  mode: 'production',</span></span><br><span class="line"><span class="deletion">-  plugins: [</span></span><br><span class="line"><span class="deletion">-    new UglifyJsPlugin(/* ... */),</span></span><br><span class="line"><span class="deletion">-    new webpack.DefinePlugin(&#123; "process.env.NODE_ENV": JSON.stringify("production") &#125;),</span></span><br><span class="line"><span class="deletion">-    new webpack.optimize.ModuleConcatenationPlugin(),</span></span><br><span class="line"><span class="deletion">-    new webpack.NoEmitOnErrorsPlugin()</span></span><br><span class="line"><span class="deletion">-  ]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="mini-css-extract-plugin与-extract-text-webpack-plugin-区别"><a href="#mini-css-extract-plugin与-extract-text-webpack-plugin-区别" class="headerlink" title="mini-css-extract-plugin与 extract-text-webpack-plugin 区别"></a>mini-css-extract-plugin与 extract-text-webpack-plugin 区别</h3><p>它与extract-text-webpack-plugin最大的区别是：它在code spliting的时候会将原先内联写在每一个 js chunk bundle的 css，单独拆成了一个个 css 文件。<br>将 css 独立拆包最大的好处就是 js 和 css 的改动，不会影响对方。比如我改了 js 文件并不会导致 css 文件的缓存失效。而且现在它自动会配合optimization.splitChunks的配置，可以自定义拆分 css 文件，比如我单独配置了element-ui作为单独一个bundle,它会自动也将它的样式单独打包成一个 css 文件，不会像以前默认将第三方的 css 全部打包成一个几十甚至上百 KB 的app.xxx.css文件了。</p><h3 id="压缩与优化"><a href="#压缩与优化" class="headerlink" title="压缩与优化"></a>压缩与优化</h3><p>打包 css 之后查看源码，我们发现它并没有帮我们做代码压缩，这时候需要使用 optimize-css-assets-webpack-plugin 这个插件，它不仅能帮你压缩 css 还能优化你的代码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置</span></span><br><span class="line">optimization: &#123;</span><br><span class="line">  minimizer: [<span class="keyword">new</span> OptimizeCSSAssetsPlugin()];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="contenthash"><a href="#contenthash" class="headerlink" title="contenthash"></a>contenthash</h3><p>但使用 MiniCssExtractPlugin 有一个需求特别注意的地方，在默认文档中它是这样配置的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">  filename: devMode ? <span class="string">"[name].css"</span> : <span class="string">"[name].[hash].css"</span>,</span><br><span class="line">  chunkFilename: devMode ? <span class="string">"[id].css"</span> : <span class="string">"[id].[hash].css"</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>filename 是指在你入口文件entry中引入生成出来的文件名，而chunkname是指那些未被在入口文件entry引入，但又通过按需加载（异步）模块的时候引入的文件。</p></blockquote><h3 id="几种-hash-的区别："><a href="#几种-hash-的区别：" class="headerlink" title="几种 hash 的区别："></a>几种 hash 的区别：</h3><ul><li>hash<br>hash 和每次 build有关，没有任何改变的情况下，每次编译出来的 hash都是一样的，但当你改变了任何一点东西，它的hash就会发生改变。<br>简单理解，你改了任何东西，hash 就会和上次不一样了。</li><li>chunkhash<br>chunkhash是根据具体每一个模块文件自己的的内容包括它的依赖计算所得的hash，所以某个文件的改动只会影响它本身的hash，不会影响其它文件。</li><li>contenthash<br>它的出现主要是为了解决，让css文件不受js文件的影响。比如foo.css被foo.js引用了，所以它们共用相同的chunkhash值。但这样子是有问题的，如果foo.js修改了代码，css文件就算内容没有任何改变，由于是该模块的 hash 发生了改变，其css文件的hash也会随之改变。<br>这个时候我们就可以使用contenthash了，保证即使css文件所处的模块里有任何内容的改变，只要 css 文件内容不变，那么它的hash就不会发生变化。<br>contenthash 你可以简单理解为是 moduleId + content 所生成的 hash。</li></ul><h3 id="几种devtool"><a href="#几种devtool" class="headerlink" title="几种devtool"></a>几种devtool</h3><table><thead><tr><th>devtool</th><th>构建速度</th><th>重新构建速度</th><th>生产环境</th><th>品质(quality)</th></tr></thead><tbody><tr><td>(none)</td><td>+++</td><td>+++</td><td>yes</td><td>打包后的代码</td></tr><tr><td>eval</td><td>+++</td><td>+++</td><td>no</td><td>生成后的代码</td></tr><tr><td>cheap-eval-source-map</td><td>+</td><td>++</td><td>no</td><td>转换过的代码（仅限行）</td></tr><tr><td>cheap-module-eval-source-map</td><td>o</td><td>++</td><td>no</td><td>原始源代码（仅限行）</td></tr><tr><td>eval-source-map</td><td>–</td><td>+</td><td>no</td><td>原始源代码</td></tr><tr><td>cheap-source-map</td><td>+</td><td>o</td><td>no</td><td>转换过的代码（仅限行）</td></tr><tr><td>cheap-module-source-map</td><td>o</td><td>-</td><td>no</td><td>原始源代码（仅限行）</td></tr><tr><td>inline-cheap-source-map</td><td>+</td><td>o</td><td>no</td><td>转换过的代码（仅限行）</td></tr><tr><td>inline-cheap-module-source-map</td><td>o</td><td>-</td><td>no</td><td>原始源代码（仅限行）</td></tr><tr><td>source-map</td><td>–</td><td>–</td><td>yes</td><td>原始源代码</td></tr><tr><td>inline-source-map</td><td>–</td><td>–</td><td>no</td><td>原始源代码</td></tr><tr><td>hidden-source-map</td><td>–</td><td>–</td><td>yes</td><td>原始源代码</td></tr><tr><td>nosources-source-map</td><td>–</td><td>–</td><td>yes</td><td>无源代码内容</td></tr></tbody></table><blockquote><p>+++ 非常快速, ++ 快速, + 比较快, o 中等, - 比较慢, – 慢</p></blockquote><h3 id="打包速度"><a href="#打包速度" class="headerlink" title="打包速度"></a>打包速度</h3><p>我们可以用 speed-measure-webpack-plugin 这个插件，它能监控 webpack 每一步操作的耗时。</p><hr><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><h3 id="需要继续改进的地方"><a href="#需要继续改进的地方" class="headerlink" title="需要继续改进的地方"></a>需要继续改进的地方</h3><blockquote><p>vux 和最新的vue-loader不适配，调用老的版本<br>压缩 css,使用minimizer会自动取消webpack的默认配置,取消压缩，用UglifyJsPlugin又不支持es6,后改用terser-webpack-plugin<br>还有许多需要优化的地方，比如图片太大且static存在一张，打包img又有一张；还有打包优化；eslint等</p></blockquote><p>webpack4 默认配置已经足够优化<br><img src="/images/donotknow.jpg" height="330" width="495"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;webpack4 &lt;/p&gt;
&lt;h2 id=&quot;AMD、CMD、CommonJs、ES6的对比&quot;&gt;&lt;a href=&quot;#AMD、CMD、CommonJs、ES6的对比&quot; class=&quot;headerlink&quot; title=&quot;AMD、CMD、CommonJs、ES6的对比&quot;&gt;&lt;/a&gt;AMD、CMD、CommonJs、ES6的对比&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;webpack4官方推荐使用CommonJs规范&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>微信多页分享</title>
    <link href="http://yoursite.com/2019/07/17/wxsdk/"/>
    <id>http://yoursite.com/2019/07/17/wxsdk/</id>
    <published>2019-07-17T06:24:29.858Z</published>
    <updated>2019-07-17T08:08:47.518Z</updated>
    
    <content type="html"><![CDATA[<p>记录一次微信分享活动</p><h2 id="微信多页分享踩坑记录"><a href="#微信多页分享踩坑记录" class="headerlink" title="微信多页分享踩坑记录"></a>微信多页分享踩坑记录</h2><a id="more"></a> <h3 id="w"><a href="#w" class="headerlink" title="w"></a>w</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一次微信分享活动&lt;/p&gt;
&lt;h2 id=&quot;微信多页分享踩坑记录&quot;&gt;&lt;a href=&quot;#微信多页分享踩坑记录&quot; class=&quot;headerlink&quot; title=&quot;微信多页分享踩坑记录&quot;&gt;&lt;/a&gt;微信多页分享踩坑记录&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/07/10/hello-world/"/>
    <id>http://yoursite.com/2019/07/10/hello-world/</id>
    <published>2019-07-10T01:44:08.203Z</published>
    <updated>2019-07-17T06:50:08.966Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="Release"><a href="#Release" class="headerlink" title="Release"></a>Release</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
